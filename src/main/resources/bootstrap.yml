
spring:
  cloud:
    config:
<<<<<<< Updated upstream
      uri: http://api.likelion-apply.org:8888
=======
      uri: http://localhost:8888
>>>>>>> Stashed changes
      name: user-service # yml 파일명 써주면 된다.
  profiles:
    active: dev
  thymeleaf:
    prefix: classpath:/templates/
    suffix: .html
    mode: HTML
    encoding: UTF-8
    check-template: true
    cache: false
#spring:
#  cloud:
#    config:
#      uri: http://config-service-backend-msa-config-server-1:8888
#      name: user-service # yml 파일명 써주면 된다.
#  profiles:
#    active: prod
#
#
###
#spring:
#  cloud:
#    config:
#      uri: http://api.likelion-apply.org:8888
#      name: user-service # yml 파일명 써주면 된다.
#  profiles:
#    active: dev

#spring:
#  cloud:
#    config:
#      uri: http://127.0.0.1:8888
#      name: user-service # yml 파일명 써주면 된다.
#  profiles:
#    active: dev-agape
#  thymeleaf:
#    prefix: classpath:/templates/
#    suffix: .html
#    mode: HTML
#    encoding: UTF-8
#    check-template: true
#    cache: false

<<<<<<< Updated upstream
## 배포할 떄 해당하는 bootstrap.yml 옵션을 오픈시킨다.
=======
# 배포할 떄 해당하는 bootstrap.yml 옵션을 오픈시킨다.
>>>>>>> Stashed changes
#spring:
#  cloud:
#    config:
#      uri: http://config-service-backend-msa-config-server-1:8888
#      name: user-service # yml 파일명 써주면 된다.
#  profiles:
#    active: prod
#  thymeleaf:
#    prefix: classpath:/templates/
#    suffix: .html
#    mode: HTML
#    encoding: UTF-8
#    check-template: true
#    cache: false


##
#spring:
#  cloud:
#    config:
#      uri: http://localhost:8888
#      name: user-service # yml 파일명 써주면 된다.
#  profiles:
#    active: dev
